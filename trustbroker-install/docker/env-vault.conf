
# Variant 0: Run directly with the read-only public repository from GitHub
GIT_URL=https://github.com/trustbroker-swiss/xtb-gitops-demo.git
#GIT_TOKEN=not-required-on-public-repo

# Variant 1: Access token used to access GitOps repository using http bearer token (must be created on Git server)
# Gitea >> User Avater >> Settings >> Applications >> Manage Access Tokens >> Generate Token
# Pass by value or by reference ie.e $TRUSTBROKER_HOME/keys/git_token
#GIT_URL=http://git@gitea:3000/trustbroker-swiss/xtb-gitops-demo.git
#GIT_TOKEN=./keys/git_token

# Variant 2: SSH key used to access GitOps repository using ssh protocol (see setup-ssh.sh on how to get it)
# We instead mount the SSH key(s) into /etc/trustbroker/keys.
#GIT_URL=ssh://git@gitea:22/trustbroker-swiss/xtb-gitops-demo.git
#SSH_KEY=./keys/id_rsa

# data selection from git repo selecting trustbroker-inventories/DEMO
CONFIG_BRANCH=main
SPRING_PROFILES_ACTIVE=DEMO

# Passphrase to decrypt keystores stored in git (RSA private in openssl PEM or PKCS12 keystores)
PKI_PASSPHRASE=changeit

# Access to the mariadb session store. We use the same passphrase for DB owner 'root' and XTB user 'trustbroker'.
STATECACHE_PASS=secret

# Development environment population
export GIT_URL GIT_TOKEN SSH_KEY CONFIG_BRANCH TRUSTBROKER_HOME SPRING_PROFILES_ACTIVE
export PKI_PASSPHRASE STATECACHE_PASS

# Rootless docker-compose requires switching the run user of the container.
[ -z "$UID" ] && export UID=$(id -u)
[ -z "$GID" ] && export GID=$(id -g)
export UID GID
